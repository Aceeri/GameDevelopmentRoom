<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Fri Jul 29 15:21:07 PDT 2011">
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ChatInputManager.as">
      <violation beginline="37" endline="37" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="112" endline="112" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="118" endline="118" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="18" endline="18" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
      <violation beginline="37" endline="37" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 44 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="48" endline="48" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 11 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="61" endline="61" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 8 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="80" endline="80" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="ChatInputManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 17 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/charts/BarChart.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.charts" class="BarChart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="57" endline="57" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="com.bit101.charts" class="BarChart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (barWidth) seems to be incorrectly named. Let your creativity flow. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/charts/Chart.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.charts" class="Chart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.charts" class="Chart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/charts/LineChart.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.charts" class="LineChart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Accordion.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Accordion.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="73" endline="73" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="Accordion.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Calendar.as">
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Calendar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Calendar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="84" endline="84" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="Calendar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/CheckBox.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="CheckBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="52" endline="52" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="CheckBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/ColorChooser.as">
      <violation beginline="50" endline="50" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="50" endline="50" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 16 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="50" endline="50" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="78" endline="78" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="319" endline="319" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (g1). </violation>
      <violation beginline="324" endline="324" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (g2). </violation>
      <violation beginline="328" endline="328" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/ComboBox.as">
      <violation beginline="153" endline="153" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="163" endline="163" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="172" endline="172" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="294" endline="294" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="299" endline="299" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 9 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Component.as">
      <violation beginline="46" endline="46" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="53" endline="53" begincolumn="3" endcolumn="3" rule="adobe.ac.pmd.rules.css.UseCssInsteadOfEmbedMetaData" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Embed metadata detected in source code where a stylesheet may be cleaner. </violation>
      <violation beginline="71" endline="71" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="231" endline="231" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (x). This function is not needed</violation>
      <violation beginline="239" endline="239" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (y). This function is not needed</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/FPSMeter.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="FPSMeter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="52" endline="52" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="FPSMeter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/HBox.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/HRangeSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HRangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/HSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/HUISlider.as">
      <violation beginline="33" endline="33" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HUISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/IndicatorLight.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="IndicatorLight.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="IndicatorLight.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/InputText.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="InputText.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="51" endline="51" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="InputText.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Knob.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 13 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="66" endline="66" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="79" endline="79" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (init). This function is not needed</violation>
      <violation beginline="229" endline="229" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 27 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="269" endline="269" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Label.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Label.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/List.as">
      <violation beginline="216" endline="216" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="228" endline="228" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="241" endline="241" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="346" endline="346" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="356" endline="356" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="59" endline="59" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="110" endline="110" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="163" endline="163" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/ListItem.as">
      <violation beginline="37" endline="37" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="52" endline="52" begincolumn="94" endcolumn="94" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="157" endline="157" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="162" endline="162" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Meter.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 14 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="171" endline="171" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r1). </violation>
      <violation beginline="172" endline="172" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r2). </violation>
      <violation beginline="196" endline="196" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r1). </violation>
      <violation beginline="197" endline="197" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r2). </violation>
      <violation beginline="198" endline="198" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r3). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/NumericStepper.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Panel.as">
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Panel.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Panel.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/ProgressBar.as">
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ProgressBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/PushButton.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="PushButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="PushButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="54" endline="54" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="PushButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/RadioButton.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="72" endline="72" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method (addButton) should be private. </violation>
      <violation beginline="86" endline="86" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method (clear) should be private. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/RangeSlider.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 14 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="75" endline="75" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/RotarySelector.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="62" endline="62" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="165" endline="165" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="187" endline="187" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/ScrollBar.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="78" endline="78" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 31 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="491" endline="491" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="503" endline="503" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="519" endline="519" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="531" endline="531" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/ScrollPane.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollPane.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Slider.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="60" endline="60" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Style.as">
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="34" endline="34" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (TEXT_BACKGROUND) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="35" endline="35" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (BACKGROUND) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (BUTTON_FACE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="37" endline="37" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (INPUT_TEXT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="38" endline="38" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (LABEL_TEXT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="39" endline="39" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (DROPSHADOW) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="40" endline="40" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (PANEL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="41" endline="41" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (PROGRESS_BAR) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="43" endline="43" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (embedFonts) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="44" endline="44" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (fontName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="45" endline="45" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (fontSize) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Text.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Text.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Text.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Text.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (init). This function is not needed</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/TextArea.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="TextArea.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/UISlider.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="UISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="UISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="54" endline="54" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="UISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/VBox.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/VRangeSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VRangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/VScrollBar.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/VSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/VUISlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VUISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/WheelMenu.as">
      <violation beginline="135" endline="135" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="135" endline="135" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="256" endline="256" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="104" endline="104" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/components/Window.as">
      <violation beginline="40" endline="40" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Window.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="40" endline="40" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Window.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 13 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="82" endline="82" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Window.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 36 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ImgurLoader.as">
      <violation beginline="37" endline="37" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="" class="ImgurLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This variable (uniqueName) is not used. </violation>
      <violation beginline="47" endline="47" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="" class="ImgurLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This private method (onSend) does not seem to be used. </violation>
      <violation beginline="16" endline="16" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="ImgurLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/LinkContainer.as">
      <violation beginline="8" endline="8" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="LinkContainer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="15" endline="15" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="LinkContainer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/LinkScrollBox.as">
      <violation beginline="20" endline="20" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="LinkScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="20" endline="20" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="LinkScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 19 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="LinkScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 43 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="70" endline="70" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="LinkScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="73" endline="73" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="LinkScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/PasteBin.as">
      <violation beginline="296" endline="296" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="328" endline="328" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="389" endline="389" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="390" endline="390" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.EmptyStatement" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This statement is empty. </violation>
      <violation beginline="408" endline="408" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="409" endline="409" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 16 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 41 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="32" endline="32" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 28 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="56" endline="56" begincolumn="0" endcolumn="3025" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 3025 actually). </violation>
      <violation beginline="99" endline="99" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 84 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="388" endline="388" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="394" endline="394" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
      <violation beginline="395" endline="395" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="PasteBin.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/SimpleGameFS.as">
      <violation beginline="6" endline="6" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="SimpleGameFS.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="8" endline="8" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="SimpleGameFS.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="3" endline="3" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="playerio" class="SimpleGameFS.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Imports from the same package are not necessary. </violation>
      <violation beginline="4" endline="4" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="playerio" class="SimpleGameFS.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/TabCode.as">
      <violation beginline="237" endline="237" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="267" endline="267" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="327" endline="327" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="328" endline="328" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.EmptyStatement" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This statement is empty. </violation>
      <violation beginline="346" endline="346" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="347" endline="347" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="31" endline="31" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="31" endline="31" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 41 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="31" endline="31" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 28 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="55" endline="55" begincolumn="0" endcolumn="3025" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 3025 actually). </violation>
      <violation beginline="87" endline="87" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 65 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="326" endline="326" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="332" endline="332" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
      <violation beginline="333" endline="333" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="TabCode.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/graphics/SpriteSheet.as">
      <violation beginline="12" endline="12" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="ugLabs.graphics" class="SpriteSheet.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="12" endline="12" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="ugLabs.graphics" class="SpriteSheet.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/util/Align.as">
      <violation beginline="6" endline="6" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="ugLabs.util" class="Align.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/UserContainer.as">
      <violation beginline="14" endline="14" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="UserContainer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (connection) of this function is not used. </violation>
      <violation beginline="7" endline="7" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="UserContainer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="14" endline="14" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="UserContainer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/UserManager.as">
      <violation beginline="42" endline="42" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="72" endline="72" begincolumn="87" endcolumn="87" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (status) of this function is not used. </violation>
      <violation beginline="143" endline="143" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (id) of this function is not used. </violation>
      <violation beginline="146" endline="146" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="202" endline="202" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="215" endline="215" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="227" endline="227" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="239" endline="239" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 16 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 19 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="61" endline="61" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="72" endline="72" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="89" endline="89" begincolumn="0" endcolumn="310" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 310 actually). </violation>
      <violation beginline="163" endline="163" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 16. </violation>
      <violation beginline="163" endline="163" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 69 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="215" endline="215" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (temp) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="252" endline="252" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="256" endline="256" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="UserManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/UserScrollBox.as">
      <violation beginline="42" endline="42" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="72" endline="72" begincolumn="87" endcolumn="87" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (status) of this function is not used. </violation>
      <violation beginline="140" endline="140" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="193" endline="193" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="206" endline="206" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="218" endline="218" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="230" endline="230" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 16 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 19 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="61" endline="61" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="72" endline="72" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="99" endline="99" begincolumn="0" endcolumn="310" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 310 actually). </violation>
      <violation beginline="106" endline="106" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="154" endline="154" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 17. </violation>
      <violation beginline="154" endline="154" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 71 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="206" endline="206" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (temp) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="243" endline="243" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="247" endline="247" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="UserScrollBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/Chat.as">
      <violation beginline="186" endline="186" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="203" endline="203" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="305" endline="305" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="375" endline="375" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.switchrules.SwitchStatementsShouldHaveDefault" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">A switch statement does not contain a default statement. Switch statements should have a default label in order to detect corner cases</violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 21 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 19 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 26 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="32" endline="32" begincolumn="3" endcolumn="3" rule="adobe.ac.pmd.rules.css.UseCssInsteadOfEmbedMetaData" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Embed metadata detected in source code where a stylesheet may be cleaner. </violation>
      <violation beginline="44" endline="44" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (tempScroll) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="53" endline="53" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 31 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="119" endline="119" begincolumn="0" endcolumn="397" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 397 actually). </violation>
      <violation beginline="123" endline="123" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="134" endline="134" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 29. </violation>
      <violation beginline="134" endline="134" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 62 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="241" endline="241" begincolumn="0" endcolumn="231" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 231 actually). </violation>
      <violation beginline="272" endline="272" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (temp) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="320" endline="320" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="369" endline="369" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 25. </violation>
      <violation beginline="369" endline="369" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 38 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="390" endline="390" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 4 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="399" endline="399" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 5 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="426" endline="426" begincolumn="0" endcolumn="355" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 355 actually). </violation>
      <violation beginline="522" endline="522" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="600" endline="600" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="" class="Chat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having '!condition'. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/com/bit101/utils/MinimalConfigurator.as">
      <violation beginline="123" endline="123" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="213" endline="213" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This private method (comprefs) does not seem to be used. </violation>
      <violation beginline="89" endline="89" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="192" endline="192" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="213" endline="213" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 39 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/net/BetterKong.as">
      <violation beginline="79" endline="79" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="81" endline="81" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="82" endline="82" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="83" endline="83" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="84" endline="84" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="85" endline="85" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="86" endline="86" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="148" endline="148" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="212" endline="212" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (e) of this function is not used. </violation>
      <violation beginline="219" endline="219" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="74" endline="74" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 25 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="74" endline="74" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 25 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="79" endline="79" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (api) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="81" endline="81" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (chat) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="82" endline="82" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (services) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="83" endline="83" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (stats) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="84" endline="84" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (mtx) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="85" endline="85" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (sharedContent) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="86" endline="86" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (images) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="89" endline="89" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (userName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="90" endline="90" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (userID) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="91" endline="91" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (userToken) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="93" endline="93" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isGuest) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="94" endline="94" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isDev) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="95" endline="95" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isCurator) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="96" endline="96" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isForumMod) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="97" endline="97" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isMod) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="98" endline="98" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isAdmin) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="100" endline="100" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (age) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="101" endline="101" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (level) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="102" endline="102" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (points) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="103" endline="103" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (avatarURL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="104" endline="104" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (chatAvatarURL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="105" endline="105" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (levelIconURL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="115" endline="115" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="183" endline="183" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="193" endline="193" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="ugLabs.net" class="BetterKong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/net/Kong.as">
      <violation beginline="79" endline="79" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="81" endline="81" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="82" endline="82" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="83" endline="83" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="84" endline="84" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="85" endline="85" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="86" endline="86" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="143" endline="143" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="232" endline="232" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (e) of this function is not used. </violation>
      <violation beginline="245" endline="245" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="74" endline="74" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 26 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="74" endline="74" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 26 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="79" endline="79" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (api) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="81" endline="81" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (chat) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="82" endline="82" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (services) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="83" endline="83" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (stats) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="84" endline="84" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (mtx) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="85" endline="85" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (sharedContent) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="86" endline="86" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (images) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="89" endline="89" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (userName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="90" endline="90" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (userId) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="91" endline="91" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (userToken) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="93" endline="93" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isGuest) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="94" endline="94" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isDev) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="95" endline="95" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isCurator) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="96" endline="96" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isForumMod) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="97" endline="97" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isMod) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="98" endline="98" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isAdmin) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="100" endline="100" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (age) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="101" endline="101" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (level) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="102" endline="102" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (points) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="103" endline="103" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (avatarURL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="104" endline="104" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (chatAvatarURL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="105" endline="105" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (levelIconURL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="116" endline="116" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="173" endline="173" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="195" endline="195" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="200" endline="200" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="ugLabs.net" class="Kong.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/jonathanasdfs auto complete name code.as">
      <violation beginline="24" endline="24" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 17 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="24" endline="24" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 35 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="24" endline="24" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 39 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="24" endline="24" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (tempScroll) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="85" endline="85" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 32 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="135" endline="135" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 23 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="238" endline="238" begincolumn="0" endcolumn="396" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 396 actually). </violation>
      <violation beginline="260" endline="260" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="283" endline="283" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 27. </violation>
      <violation beginline="283" endline="283" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 32 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="303" endline="303" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 4 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="308" endline="308" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 4 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="369" endline="369" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 29. </violation>
      <violation beginline="369" endline="369" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 44 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="390" endline="390" begincolumn="0" endcolumn="204" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 204 actually). </violation>
      <violation beginline="482" endline="482" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="516" endline="516" begincolumn="0" endcolumn="260" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 260 actually). </violation>
      <violation beginline="517" endline="517" begincolumn="0" endcolumn="271" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 271 actually). </violation>
      <violation beginline="554" endline="554" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 16. </violation>
      <violation beginline="554" endline="554" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 27 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="603" endline="603" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
      <violation beginline="625" endline="625" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="jonathanasdfs auto complete name code.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/KongChat.as">
      <violation beginline="20" endline="20" begincolumn="0" endcolumn="57" rule="adobe.ac.pmd.rules.event.ListenForHardCodedEventName" ruleset="All Flex Rules" package="" class="KongChat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">addEventListener must not contain hard coded strings. You should not listen for a plain string. If you rename this string, you need to replace the string listener as well. Use constants instead</violation>
      <violation beginline="21" endline="21" begincolumn="0" endcolumn="58" rule="adobe.ac.pmd.rules.event.ListenForHardCodedEventName" ruleset="All Flex Rules" package="" class="KongChat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">addEventListener must not contain hard coded strings. You should not listen for a plain string. If you rename this string, you need to replace the string listener as well. Use constants instead</violation>
      <violation beginline="25" endline="25" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="" class="KongChat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="33" endline="33" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="KongChat.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/Main.as">
      <violation beginline="210" endline="210" begincolumn="0" endcolumn="55" rule="adobe.ac.pmd.rules.event.ListenForHardCodedEventName" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">addEventListener must not contain hard coded strings. You should not listen for a plain string. If you rename this string, you need to replace the string listener as well. Use constants instead</violation>
      <violation beginline="372" endline="372" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This variable (n) is not used. </violation>
      <violation beginline="607" endline="607" begincolumn="0" endcolumn="56" rule="adobe.ac.pmd.rules.event.ListenForHardCodedEventName" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">addEventListener must not contain hard coded strings. You should not listen for a plain string. If you rename this string, you need to replace the string listener as well. Use constants instead</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 19 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 29 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 37 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 9 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="28" endline="28" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (roomName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="29" endline="29" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (collabRoomName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="30" endline="30" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (regRoomName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="31" endline="31" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (debugField) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="32" endline="32" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (chatDisplay) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="33" endline="33" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (playerList) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="35" endline="35" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (client) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (connection) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="37" endline="37" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (secretString) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="39" endline="39" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="39" endline="39" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
      <violation beginline="86" endline="86" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 27 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="328" endline="328" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="378" endline="378" begincolumn="0" endcolumn="225" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 225 actually). </violation>
      <violation beginline="391" endline="391" begincolumn="0" endcolumn="225" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 225 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/BetaTab.as">
      <violation beginline="276" endline="276" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (e) of this function is not used. </violation>
      <violation beginline="313" endline="313" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (e) of this function is not used. </violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 19 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 23 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="26" endline="26" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="53" endline="53" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="90" endline="90" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 32 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="169" endline="169" begincolumn="0" endcolumn="304" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 304 actually). </violation>
      <violation beginline="170" endline="170" begincolumn="0" endcolumn="374" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 374 actually). </violation>
      <violation beginline="305" endline="305" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="BetaTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ChatDisplay.as">
      <violation beginline="25" endline="25" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 18 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="25" endline="25" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 34 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="25" endline="25" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 41 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="25" endline="25" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 13 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (tempScroll) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="92" endline="92" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 30 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="140" endline="140" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 23 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="175" endline="175" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 28 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="177" endline="177" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.PropertyHiddenByLocalVariable" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A class property is hidden by this local variable (poll). </violation>
      <violation beginline="251" endline="251" begincolumn="0" endcolumn="396" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 396 actually). </violation>
      <violation beginline="277" endline="277" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="300" endline="300" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 46. </violation>
      <violation beginline="300" endline="300" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 54 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="456" endline="456" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 41. </violation>
      <violation beginline="456" endline="456" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 79 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="476" endline="476" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p1). </violation>
      <violation beginline="477" endline="477" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="497" endline="497" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="510" endline="510" begincolumn="0" endcolumn="203" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 203 actually). </violation>
      <violation beginline="520" endline="520" begincolumn="0" endcolumn="203" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 203 actually). </violation>
      <violation beginline="618" endline="618" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="657" endline="657" begincolumn="0" endcolumn="260" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 260 actually). </violation>
      <violation beginline="658" endline="658" begincolumn="0" endcolumn="271" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 271 actually). </violation>
      <violation beginline="714" endline="714" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 21. </violation>
      <violation beginline="714" endline="714" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 35 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="794" endline="794" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="ChatDisplay.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/LinksTab.as">
      <violation beginline="23" endline="23" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ExcessiveImport" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A high number of imports can indicate a high degree of coupling within an object. (15 maximum but 16 actually). A high number of imports can indicate a high degree of coupling within an object. Rule counts the number of unique imports and reports a violation if the count is above the user defined threshold</violation>
      <violation beginline="23" endline="23" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="23" endline="23" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 20 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="23" endline="23" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 9 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="72" endline="72" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 56 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="83" endline="83" begincolumn="0" endcolumn="222" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 222 actually). </violation>
      <violation beginline="86" endline="86" begincolumn="0" endcolumn="220" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 220 actually). </violation>
      <violation beginline="94" endline="94" begincolumn="0" endcolumn="224" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 224 actually). </violation>
      <violation beginline="95" endline="95" begincolumn="0" endcolumn="347" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 347 actually). </violation>
      <violation beginline="96" endline="96" begincolumn="0" endcolumn="317" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 317 actually). </violation>
      <violation beginline="97" endline="97" begincolumn="0" endcolumn="250" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 250 actually). </violation>
      <violation beginline="98" endline="98" begincolumn="0" endcolumn="225" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 225 actually). </violation>
      <violation beginline="108" endline="108" begincolumn="0" endcolumn="373" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 373 actually). </violation>
      <violation beginline="109" endline="109" begincolumn="0" endcolumn="492" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 492 actually). </violation>
      <violation beginline="110" endline="110" begincolumn="0" endcolumn="298" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 298 actually). </violation>
      <violation beginline="111" endline="111" begincolumn="0" endcolumn="441" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 441 actually). </violation>
      <violation beginline="114" endline="114" begincolumn="0" endcolumn="208" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 208 actually). </violation>
      <violation beginline="115" endline="115" begincolumn="0" endcolumn="312" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 312 actually). </violation>
      <violation beginline="119" endline="119" begincolumn="0" endcolumn="210" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 210 actually). </violation>
      <violation beginline="123" endline="123" begincolumn="0" endcolumn="207" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 207 actually). </violation>
      <violation beginline="129" endline="129" begincolumn="0" endcolumn="240" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 240 actually). </violation>
      <violation beginline="130" endline="130" begincolumn="0" endcolumn="231" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 231 actually). </violation>
      <violation beginline="134" endline="134" begincolumn="0" endcolumn="205" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 205 actually). </violation>
      <violation beginline="189" endline="189" begincolumn="0" endcolumn="422" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 422 actually). </violation>
      <violation beginline="381" endline="381" begincolumn="0" endcolumn="222" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 222 actually). </violation>
      <violation beginline="384" endline="384" begincolumn="0" endcolumn="220" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 220 actually). </violation>
      <violation beginline="391" endline="391" begincolumn="0" endcolumn="224" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 224 actually). </violation>
      <violation beginline="392" endline="392" begincolumn="0" endcolumn="347" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 347 actually). </violation>
      <violation beginline="393" endline="393" begincolumn="0" endcolumn="317" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 317 actually). </violation>
      <violation beginline="394" endline="394" begincolumn="0" endcolumn="250" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 250 actually). </violation>
      <violation beginline="395" endline="395" begincolumn="0" endcolumn="225" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 225 actually). </violation>
      <violation beginline="405" endline="405" begincolumn="0" endcolumn="373" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 373 actually). </violation>
      <violation beginline="406" endline="406" begincolumn="0" endcolumn="492" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 492 actually). </violation>
      <violation beginline="407" endline="407" begincolumn="0" endcolumn="298" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 298 actually). </violation>
      <violation beginline="408" endline="408" begincolumn="0" endcolumn="441" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 441 actually). </violation>
      <violation beginline="411" endline="411" begincolumn="0" endcolumn="208" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 208 actually). </violation>
      <violation beginline="412" endline="412" begincolumn="0" endcolumn="312" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 312 actually). </violation>
      <violation beginline="416" endline="416" begincolumn="0" endcolumn="210" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 210 actually). </violation>
      <violation beginline="420" endline="420" begincolumn="0" endcolumn="207" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 207 actually). </violation>
      <violation beginline="425" endline="425" begincolumn="0" endcolumn="273" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 273 actually). </violation>
      <violation beginline="482" endline="482" begincolumn="0" endcolumn="422" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="LinksTab.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 422 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/PlayTimer.as">
      <violation beginline="51" endline="51" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (id) of this function is not used. </violation>
      <violation beginline="51" endline="51" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (message) of this function is not used. </violation>
      <violation beginline="17" endline="17" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="19" endline="19" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (minutesTime) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="22" endline="22" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (serverUpdateTime) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="23" endline="23" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (reconnectTime) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="25" endline="25" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="" class="PlayTimer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (isTransferingRooms) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/DatabaseObject.as">
      <violation beginline="28" endline="28" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="DatabaseObject.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (useOptimisticLocks) of this function is not used. </violation>
      <violation beginline="28" endline="28" begincolumn="60" endcolumn="60" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="DatabaseObject.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (fullOverwrite) of this function is not used. </violation>
      <violation beginline="28" endline="28" begincolumn="91" endcolumn="91" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="DatabaseObject.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (callback) of this function is not used. </violation>
      <violation beginline="28" endline="28" begincolumn="117" endcolumn="117" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="DatabaseObject.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (errorHandler) of this function is not used. </violation>
      <violation beginline="7" endline="7" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.DynamicClass" ruleset="All Flex Rules" package="playerio" class="DatabaseObject.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A class must not be dynamic. When using dynamic classes, you cannot control how the developer will use your class. It makes refactoring really difficult</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/VaultItem.as">
      <violation beginline="7" endline="7" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.DynamicClass" ruleset="All Flex Rules" package="playerio" class="VaultItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A class must not be dynamic. When using dynamic classes, you cannot control how the developer will use your class. It makes refactoring really difficult</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/BigDB.as">
      <violation beginline="44" endline="44" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="69" endline="69" begincolumn="62" endcolumn="62" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="69" endline="69" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="90" endline="90" begincolumn="63" endcolumn="63" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="90" endline="90" begincolumn="77" endcolumn="77" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="61" endline="61" begincolumn="0" endcolumn="453" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 453 actually). </violation>
      <violation beginline="83" endline="83" begincolumn="0" endcolumn="440" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="BigDB.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 440 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/ErrorLog.as">
      <violation beginline="17" endline="17" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="ErrorLog.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/Multiplayer.as">
      <violation beginline="17" endline="17" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="Multiplayer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="29" endline="29" begincolumn="76" endcolumn="76" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="Multiplayer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="29" endline="29" begincolumn="93" endcolumn="93" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="Multiplayer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="38" endline="38" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="Multiplayer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="49" endline="49" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="Multiplayer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="42" endline="42" begincolumn="0" endcolumn="371" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="Multiplayer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 371 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/PayVault.as">
      <violation beginline="108" endline="108" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="PayVault.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="117" endline="117" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="PayVault.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="6" endline="6" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="playerio" class="PayVault.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/PlayerIO.as">
      <violation beginline="21" endline="21" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="43" endline="43" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (stage) of this function is not used. </violation>
      <violation beginline="43" endline="43" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (gameid) of this function is not used. </violation>
      <violation beginline="43" endline="43" begincolumn="62" endcolumn="62" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (connectionid) of this function is not used. </violation>
      <violation beginline="43" endline="43" begincolumn="83" endcolumn="83" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (userid) of this function is not used. </violation>
      <violation beginline="43" endline="43" begincolumn="98" endcolumn="98" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (auth) of this function is not used. </violation>
      <violation beginline="43" endline="43" begincolumn="111" endcolumn="111" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (callback) of this function is not used. </violation>
      <violation beginline="43" endline="43" begincolumn="130" endcolumn="130" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (errorhandler) of this function is not used. </violation>
      <violation beginline="76" endline="76" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (stage) of this function is not used. </violation>
      <violation beginline="76" endline="76" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (align) of this function is not used. </violation>
      <violation beginline="85" endline="85" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="90" endline="90" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="71" endline="71" begincolumn="0" endcolumn="204" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 204 actually). </violation>
      <violation beginline="73" endline="73" begincolumn="0" endcolumn="237" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIO.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 237 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/QuickConnect.as">
      <violation beginline="50" endline="50" begincolumn="156" endcolumn="156" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="QuickConnect.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="50" endline="50" begincolumn="0" endcolumn="237" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="QuickConnect.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 237 actually). </violation>
      <violation beginline="111" endline="111" begincolumn="0" endcolumn="230" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="QuickConnect.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 230 actually). </violation>
      <violation beginline="138" endline="138" begincolumn="0" endcolumn="229" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="QuickConnect.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 229 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/RoomInfo.as">
      <violation beginline="37" endline="37" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="playerio" class="RoomInfo.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/PollManager.as">
      <violation beginline="44" endline="44" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 26 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="22" endline="22" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 17 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="52" endline="52" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 70 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="143" endline="143" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="162" endline="162" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 34 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="250" endline="250" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="" class="PollManager.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/net/SiteLock.as">
      <violation beginline="224" endline="224" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.net" class="SiteLock.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="168" endline="168" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="ugLabs.net" class="SiteLock.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/net/Slot.as">
      <violation beginline="93" endline="93" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.net" class="Slot.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="95" endline="95" begincolumn="37" endcolumn="37" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Slot.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="104" endline="104" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="ugLabs.net" class="Slot.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="62" endline="62" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="ugLabs.net" class="Slot.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="65" endline="65" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="ugLabs.net" class="Slot.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="76" endline="76" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="ugLabs.net" class="Slot.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/util/CollisionDetection.as">
      <violation beginline="31" endline="31" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="60" endline="60" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="60" endline="60" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="88" endline="88" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="88" endline="88" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (c1). </violation>
      <violation beginline="31" endline="31" begincolumn="57" endcolumn="57" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r1). </violation>
      <violation beginline="60" endline="60" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r1). </violation>
      <violation beginline="60" endline="60" begincolumn="55" endcolumn="55" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r2). </violation>
      <violation beginline="88" endline="88" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (c1). </violation>
      <violation beginline="88" endline="88" begincolumn="59" endcolumn="59" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (c2). </violation>
      <violation beginline="115" endline="115" begincolumn="39" endcolumn="39" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p1). </violation>
      <violation beginline="115" endline="115" begincolumn="49" endcolumn="49" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="ugLabs.util" class="CollisionDetection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p2). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/Player.as">
      <violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 17 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="28" endline="28" begincolumn="0" endcolumn="399" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 399 actually). </violation>
      <violation beginline="30" endline="30" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 6 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="30" endline="30" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 33 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="30" endline="30" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="" class="Player.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/graphics/SpriteSheetAnimation.as">
      <violation beginline="25" endline="25" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="ugLabs.graphics" class="SpriteSheetAnimation.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="25" endline="25" begincolumn="40" endcolumn="40" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="ugLabs.graphics" class="SpriteSheetAnimation.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 6 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="25" endline="25" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="ugLabs.graphics" class="SpriteSheetAnimation.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/net/SaveSystem.as">
      <violation beginline="61" endline="61" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.style.ImportFromSamePackage" ruleset="All Flex Rules" package="ugLabs.net" class="SaveSystem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Imports from the same package are not necessary. </violation>
      <violation beginline="68" endline="68" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="ugLabs.net" class="SaveSystem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="68" endline="68" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="ugLabs.net" class="SaveSystem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="85" endline="85" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="ugLabs.net" class="SaveSystem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="130" endline="130" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="ugLabs.net" class="SaveSystem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="134" endline="134" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="ugLabs.net" class="SaveSystem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/PlayerList.as">
      <violation beginline="11" endline="11" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="" class="PlayerList.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 12 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="113" endline="113" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="PlayerList.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 21 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/TabLinks.as">
      <violation beginline="17" endline="17" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="" class="TabLinks.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 64 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/ugLabs/effects/GridFlyer.as">
      <violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="ugLabs.effects" class="GridFlyer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 19 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="ugLabs.effects" class="GridFlyer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 13 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="34" endline="34" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="ugLabs.effects" class="GridFlyer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 9 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="ugLabs.effects" class="GridFlyer.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 23 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/Connection.as">
      <violation beginline="10" endline="10" begincolumn="0" endcolumn="202" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="Connection.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 202 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/playerio/PlayerIOError.as">
      <violation beginline="60" endline="60" begincolumn="0" endcolumn="355" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIOError.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 355 actually). </violation>
      <violation beginline="62" endline="62" begincolumn="0" endcolumn="411" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIOError.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 411 actually). </violation>
      <violation beginline="90" endline="90" begincolumn="0" endcolumn="201" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIOError.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 201 actually). </violation>
      <violation beginline="102" endline="102" begincolumn="0" endcolumn="245" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIOError.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 245 actually). </violation>
      <violation beginline="118" endline="118" begincolumn="0" endcolumn="204" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="playerio" class="PlayerIOError.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 204 actually). </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/TimeCorrectionX.as">
      <violation beginline="61" endline="61" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="TimeCorrectionX.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (e) of this function is not used. </violation>
      <violation beginline="70" endline="70" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="" class="TimeCorrectionX.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This parameter (o) of this function is not used. </violation>
   </file>
   <file name="C:/Users/Matthew/GameDevelopmentRoom/GDR Chat Build 2.0/src/TabBeta.as">
      <violation beginline="51" endline="51" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="" class="TabBeta.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This variable (uniqueName) is not used. </violation>
   </file>
</pmd>
